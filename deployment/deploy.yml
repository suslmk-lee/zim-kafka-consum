apiVersion: v1
kind: ConfigMap
metadata:
  name: zim-kafka-consumer-config
data:
  PROFILE: "prod"
  DATABASE_HOST: "postgresql-cp.iot-db"
  DATABASE_NAME: "cp-db"
  DATABASE_PORT: "5432"
  KAFKA_HOST: "103.218.158.217"
  KAFKA_PORT: "31092"
  KAFKA_TOPIC: "cp-db-topic1"
  KAFKA_GROUP_ID: "iot-data-group"
  INIT_DB_SCHEMA: |
    CREATE TABLE IF NOT EXISTS iot_data (
      device VARCHAR(50),
      timestamp TIMESTAMP,
      pro_ver INT,
      minor_ver INT,
      sn BIGINT,
      model VARCHAR(50),
      tyield FLOAT,
      dyield FLOAT,
      pf FLOAT,
      pmax INT,
      pac INT,
      sac INT,
      uab INT,
      ubc INT,
      uca INT,
      ia INT,
      ib INT,
      ic INT,
      freq INT,
      tmod FLOAT,
      tamb FLOAT,
      mode VARCHAR(20),
      qac INT,
      bus_capacitance FLOAT,
      ac_capacitance FLOAT,
      pdc FLOAT,
      pmax_lim FLOAT,
      smax_lim FLOAT,
      is_sent BOOLEAN,
      reg_timestamp TIMESTAMP default CURRENT_TIMESTAMP
    );

---
apiVersion: v1
data:
  .dockerconfigjson: eyJhdXRocyI6eyI0NGNlNzg5Yi1rcjEtcmVnaXN0cnkuY29udGFpbmVyLm5obmNsb3VkLmNvbS9jb250YWluZXItcGxhdGZvcm0tcmVnaXN0cnkiOnsidXNlcm5hbWUiOiJYQ0ExT2owRnFBOE9NaGFsT1VoSyIsInBhc3N3b3JkIjoiekdneG83WGxwazVvalk3diIsImF1dGgiOiJXRU5CTVU5cU1FWnhRVGhQVFdoaGJFOVZhRXM2ZWtkbmVHODNXR3h3YXpWdmFsazNkZz09In19fQ==
kind: Secret
metadata:
  name: ncr
type: kubernetes.io/dockerconfigjson

---
apiVersion: v1
kind: Secret
metadata:
  name: zim-kafka-consumer-secret
type: Opaque
data:
  DATABASE_USER: YWRtaW4=  # echo -n 'admin' | base64
  DATABASE_PASSWORD: bWFzdGVy  # echo -n 'master' | base64

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zim-kafka-consumer-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zim-kafka-consumer-app
  template:
    metadata:
      labels:
        app: zim-kafka-consumer-app
    spec:
      initContainers:
        - name: db-init-container
          image: postgres:13-alpine
          command: [ "sh", "-c", "PGPASSWORD=master psql -h $DATABASE_HOST -U $DATABASE_USER -d $DATABASE_NAME -f /docker-entrypoint-initdb.d/init.sql" ]
          env:
            - name: POSTGRES_HOST_AUTH_METHOD
              value: "trust"
          envFrom:
            - configMapRef:
                name: zim-kafka-consumer-config
            - secretRef:
                name: zim-kafka-consumer-secret
          volumeMounts:
            - name: db-schema-volume
              mountPath: /docker-entrypoint-initdb.d
      containers:
        - name: zim-kafka-consumer-container
          image: 44ce789b-kr1-registry.container.nhncloud.com/container-platform-registry/zim-kafka-consumer:latest
          ports:
            - containerPort: 8080
          env:
            - name: PROFILE
              valueFrom:
                configMapKeyRef:
                  name: zim-kafka-consumer-config
                  key: PROFILE
          envFrom:
            - configMapRef:
                name: zim-kafka-consumer-config
            - secretRef:
                name: zim-kafka-consumer-secret
      imagePullSecrets:
        - name: ncr
      volumes:
        - name: db-schema-volume
          configMap:
            name: zim-kafka-consumer-config
            items:
              - key: INIT_DB_SCHEMA
                path: init.sql

---
apiVersion: v1
kind: Service
metadata:
  name: zim-kafka-consumer-service
spec:
  selector:
    app: zim-kafka-consumer-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: ClusterIP
